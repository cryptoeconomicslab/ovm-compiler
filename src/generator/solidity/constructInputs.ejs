<%    property.inputs.forEach((input, index) => { -%>
<%      if(input.type == 'ConstantInput') { -%>
        <%= valName %>[<%=index%>] = utils.withPrimitivePrefix(<%=input.name%>);
<%      } else if(input.type == 'LabelInput') { -%>
        <%= valName %>[<%=index%>] = utils.withLabelPrefix(<%=input.label%>);
<%      } else if(input.type == 'NormalInput') { -%>
<%        if(input.children.length == 1) { -%>
<%          if(input.children[0] >= 0) { -%>
        <%= valName %>[<%=index%>] = inputProperty<%=input.inputIndex%>.inputs[<%= input.children[0] %>];
<%          } else { -%>
        <%= valName %>[<%=index%>] = utils.withPrimitivePrefix(abi.encodePacked(inputProperty<%=input.inputIndex%>.predicateAddress));
<%          } -%>
<%        } else if(input.children.length == 2) { -%>
<%          if(input.children[0] >= 0) { -%>
        <%= valName %>[<%=index%>] = inputProperty<%=input.inputIndex%>Child<%=input.children[0]%>.inputs[<%= input.children[1] %>];
<%          } else { -%>
        <%= valName %>[<%=index%>] = utils.withPrimitivePrefix(abi.encodePacked(inputProperty<%=input.inputIndex%>Child<%=input.children[0]%>.predicateAddress));
<%          } -%>
<%        } else { -%>
        <%= valName %>[<%=index%>] = _inputs[<%=input.inputIndex%>];
<%        } -%>
<%      } else if(input.type == 'VariableInput') { -%>
        <%= valName %>[<%=index%>] = utils.withPrimitivePrefix(<%- witnessName %>);
<%      } else if(input.type == 'SelfInput') { -%>
        <%= valName %>[<%=index%>] = utils.withPrimitivePrefix(abi.encodePacked(address(self)));
<%      } else { -%>
        // error unknown input type
<%      } -%>
<%    }) -%>